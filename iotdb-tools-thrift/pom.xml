<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <version>32</version>
    </parent>

    <groupId>org.apache.iotdb.tools</groupId>
    <artifactId>iotdb-tools-thrift</artifactId>
    <!--
        Setting the base-version to exactly the same as ${thrift.version} as this module
        contains nothing else as the compiled thrift binary without any modification.
        The fourth segment allows us to re-deploy, if we need to change the config.
    -->
    <version>0.20.0.0-Java11</version>
    <packaging>pom</packaging>

    <name>IoTDB-Tools: Thrift</name>
    <description>Local build of the Apache Thrift compiler.</description>

    <properties>
        <thrift.version>0.20.0</thrift.version>
        <thrift.with.cpp>ON</thrift.with.cpp>
        <thrift.with.go>ON</thrift.with.go>
        <thrift.with.python>ON</thrift.with.python>
        <thrift.with.rust>ON</thrift.with.rust>
        <cmake.generator>Unix Makefiles</cmake.generator>
        <cmake.build.type>Release</cmake.build.type>
    </properties>

    <repositories>
        <repository>
            <id>conatype-oss</id>
            <url>https://oss.sonatype.org/service/local/repositories/releases/content</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>com.googlecode.maven-download-plugin</groupId>
                <artifactId>download-maven-plugin</artifactId>
                <executions>
                    <!-- Download the sources for building the thrift compiler -->
                    <execution>
                        <id>get-thrift</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>wget</goal>
                        </goals>
                        <configuration>
                            <url>https://archive.apache.org/dist/thrift/${thrift.version}/thrift-${thrift.version}.tar.gz</url>
                            <unpack>true</unpack>
                            <outputDirectory>${project.build.directory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.googlecode.cmake-maven-project</groupId>
                <artifactId>cmake-maven-plugin</artifactId>
                <executions>
                    <!-- Uses a CMake generator to generate the build using the build tool of choice -->
                    <execution>
                        <id>cmake-generate</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <generator>${cmake.generator}</generator>
                            <sourcePath>${project.build.directory}/thrift-${thrift.version}</sourcePath>
                            <targetPath>${project.build.directory}/build</targetPath>
                            <options>
                                <!-- Disable testing for now -->
                                <option>-DBUILD_TESTING=OFF</option>
                                <!-- Enable and disable the building of code generators for different languages -->
                                <option>-DTHRIFT_COMPILER_C_GLIB=OFF</option>
                                <option>-DTHRIFT_COMPILER_CL=OFF</option>
                                <option>-DTHRIFT_COMPILER_CPP=${thrift.with.cpp}</option>
                                <option>-DTHRIFT_COMPILER_D=OFF</option>
                                <option>-DTHRIFT_COMPILER_DART=OFF</option>
                                <option>-DTHRIFT_COMPILER_DELPHI=OFF</option>
                                <option>-DTHRIFT_COMPILER_ERL=OFF</option>
                                <option>-DTHRIFT_COMPILER_GO=${thrift.with.go}</option>
                                <option>-DTHRIFT_COMPILER_GV=OFF</option>
                                <option>-DTHRIFT_COMPILER_HAXE=OFF</option>
                                <option>-DTHRIFT_COMPILER_HTML=OFF</option>
                                <option>-DTHRIFT_COMPILER_JAVA=ON</option>
                                <option>-DTHRIFT_COMPILER_JAVAME=ON</option>
                                <option>-DTHRIFT_COMPILER_JSON=OFF</option>
                                <option>-DTHRIFT_COMPILER_LUA=OFF</option>
                                <option>-DTHRIFT_COMPILER_NETSTD=ON</option>
                                <option>-DTHRIFT_COMPILER_OCAML=OFF</option>
                                <option>-DTHRIFT_COMPILER_PERL=OFF</option>
                                <option>-DTHRIFT_COMPILER_PHP=OFF</option>
                                <option>-DTHRIFT_COMPILER_PY=${thrift.with.python}</option>
                                <option>-DTHRIFT_COMPILER_RB=OFF</option>
                                <option>-DTHRIFT_COMPILER_RS=${thrift.with.rust}</option>
                                <option>-DTHRIFT_COMPILER_ST=OFF</option>
                                <option>-DTHRIFT_COMPILER_SWIFT=OFF</option>
                                <option>-DTHRIFT_COMPILER_XML=OFF</option>
                                <option>-DTHRIFT_COMPILER_XSD=OFF</option>
                                <!-- Enable and disable the building of libs for different languages -->
                                <option>-DBUILD_C_GLIB=OFF</option>
                                <option>-DBUILD_CPP=${thrift.with.cpp}</option>
                                <!-- Don't build Java, as the libs are available via Maven -->
                                <option>-DBUILD_JAVA=OFF</option>
                                <option>-DBUILD_NODEJS=OFF</option>
                                <option>-DBUILD_PYTHON=${thrift.with.python}</option>
                                <option>-DBUILD_JAVASCRIPT=OFF</option>
                                <option>-DWITH_SHARED_LIB=OFF</option>
                                <!-- Generate libthrift.a to compile IoTDB Session -->
                                <option>-DWITH_STATIC_LIB=ON</option>
                                <option>-DCMAKE_POSITION_INDEPENDENT_CODE=ON</option>
                            </options>
                        </configuration>
                    </execution>
                    <!-- Actually executes the build -->
                    <execution>
                        <id>cmake-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <config>${cmake.build.type}</config>
                            <!-- The directory where the "generate" step generated the build configuration -->
                            <projectDirectory>${project.build.directory}/build</projectDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Bundle up the needed parts into an archive for this architecture
                The bundle contains the Thrift executable, the shared libraries and the header-files,
                which are all needed to build the client
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <appendAssemblyId>true</appendAssemblyId>
                            <descriptors>
                                <descriptor>src/main/assembly/thrift.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                            <goal>rc-open</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.googlecode.cmake-maven-project</groupId>
                    <artifactId>cmake-maven-plugin</artifactId>
                    <version>3.29.3-b2</version>
                </plugin>
                <plugin>
                    <groupId>org.sonatype.plugins</groupId>
                    <artifactId>nexus-staging-maven-plugin</artifactId>
                    <version>1.6.13</version>
                    <executions>
                        <execution>
                            <id>default-deploy</id>
                            <phase>deploy</phase>
                            <goals>
                                <goal>deploy</goal>
                                <goal>rc-open</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <serverId>apache.releases.https</serverId>
                        <nexusUrl>https://repository.apache.org</nexusUrl>
                        <skipStagingRepositoryClose>true</skipStagingRepositoryClose>
                        <stagingRepositoryId>orgapacheiotdb-1149</stagingRepositoryId>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <profiles>
        <profile>
            <id>.os-unix</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                    <arch>!aarch64</arch>
                </os>
            </activation>
            <properties>
                <os.classifier>linux-x86_64</os.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.cmake-maven-project</groupId>
                        <artifactId>cmake-maven-plugin</artifactId>
                        <executions>
                            <!-- Uses a CMake generator to generate the build using the build tool of choice -->
                            <execution>
                                <id>cmake-generate</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <generator>${cmake.generator}</generator>
                                    <sourcePath>${project.build.directory}/thrift-${thrift.version}</sourcePath>
                                    <targetPath>${project.build.directory}/build</targetPath>
                                    <options combine.children="append">
                                        <!-- Tell the linker to build statically linked binaries -->
                                        <option>-DCMAKE_EXE_LINKER_FLAGS=-static</option>
                                        <option>-DZLIB_USE_STATIC_LIBS=ON</option>
                                        <option>-DOPENSSL_USE_STATIC_LIBS=ON</option>
                                    </options>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>.os-unix-arm</id>
            <activation>
                <os>
                    <family>unix</family>
                    <name>Linux</name>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <os.classifier>linux-aarch64</os.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.cmake-maven-project</groupId>
                        <artifactId>cmake-maven-plugin</artifactId>
                        <executions>
                            <!-- Uses a CMake generator to generate the build using the build tool of choice -->
                            <execution>
                                <id>cmake-generate</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <generator>${cmake.generator}</generator>
                                    <sourcePath>${project.build.directory}/thrift-${thrift.version}</sourcePath>
                                    <targetPath>${project.build.directory}/build</targetPath>
                                    <options combine.children="append">
                                        <!-- Tell the linker to build statically linked binaries -->
                                        <option>-DCMAKE_EXE_LINKER_FLAGS=-static</option>
                                        <option>-DZLIB_USE_STATIC_LIBS=ON</option>
                                        <option>-DOPENSSL_USE_STATIC_LIBS=ON</option>
                                    </options>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>.os-mac</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>!aarch64</arch>
                </os>
            </activation>
            <properties>
                <os.classifier>mac-x86_64</os.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.cmake-maven-project</groupId>
                        <artifactId>cmake-maven-plugin</artifactId>
                        <executions>
                            <!-- Uses a CMake generator to generate the build using the build tool of choice -->
                            <execution>
                                <id>cmake-generate</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <generator>${cmake.generator}</generator>
                                    <sourcePath>${project.build.directory}/thrift-${thrift.version}</sourcePath>
                                    <targetPath>${project.build.directory}/build</targetPath>
                                    <options combine.children="append">
                                        <!-- Specify new version Bison path for Mac-OS, as the default version is too old -->
                                        <option>-DBISON_EXECUTABLE=/usr/local/opt/bison/bin/bison</option>
                                    </options>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>.os-mac-arm</id>
            <activation>
                <os>
                    <family>mac</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <os.classifier>mac-aarch64</os.classifier>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.cmake-maven-project</groupId>
                        <artifactId>cmake-maven-plugin</artifactId>
                        <executions>
                            <!-- Uses a CMake generator to generate the build using the build tool of choice -->
                            <execution>
                                <id>cmake-generate</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                                <configuration>
                                    <generator>${cmake.generator}</generator>
                                    <sourcePath>${project.build.directory}/thrift-${thrift.version}</sourcePath>
                                    <targetPath>${project.build.directory}/build</targetPath>
                                    <options combine.children="append">
                                        <!-- Specify new version Bison path for Mac-OS, as the default version is too old -->
                                        <option>-DBISON_EXECUTABLE=/opt/homebrew/opt/bison/bin/bison</option>
                                    </options>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>.os-windows</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>!aarch64</arch>
                </os>
            </activation>
            <properties>
                <os.classifier>windows-x86_64</os.classifier>
                <cmake.generator>Visual Studio 17 2022</cmake.generator>
            </properties>
        </profile>

        <profile>
            <id>.os-windows-arm</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>aarch64</arch>
                </os>
            </activation>
            <properties>
                <os.classifier>windows-aarch64</os.classifier>
                <cmake.generator>Visual Studio 17 2022</cmake.generator>
            </properties>
        </profile>
    </profiles>
</project>
